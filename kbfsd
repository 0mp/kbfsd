#! /bin/sh -
#
# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2018 Mateusz Piotrowski <0mp@FreeBSD.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#     1. Redistributions of source code must retain the above copyright notice,
#        this list of conditions and the following disclaimer.
#     2. Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in the
#        documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# ---
# Version: 0.1.0

# PROVIDE: kbfsd
# REQUIRE: NETWORKING DAEMON

. /etc/rc.subr

name='kbfsd'
rcvar="${name}_enable"

load_rc_config "${name}"

# Default settings.
: "${kbfsd_enable:=no}"
: "${kbfsd_username:?'kbfsd_username cannot be empty.'}"
: "${kbfsd_mountpoint:=/keybase}"

# command="/usr/local/bin/kbfsfuse"
command="/usr/bin/su"
command_args="${kbfsd_username} -c 'daemon /usr/local/bin/kbfsfuse -log-to-file ${kbfsd_mountpoint}'"

start_precmd='kbfsd_prestart'
# start_cmd='kbfsd_start'
stop_cmd=':'

kbfsd_modules='fuse'

kbfsd_prestart()
{
	local _m

	if ! id -u -- "${kbfsd_username}" > /dev/null 3>&1; then
		err 1 "kbfsd_username is set to '${kbfsd_username}' which is not a valid user."
	fi

	if ! mkdir -p -- "${kbfsd_mountpoint}"; then
		err 1 "Cannot create the '${kbfsd_mountpoint}' directory.'"
	elif ! chown "${kbfsd_username}" "${kbfsd_mountpoint}"; then
		err 1 "Cannot set ${kbfsd_username} as the owner of ${kbfsd_mountpoint}."
	fi

	for _m in ${kbfsd_modules}; do
		if ! load_kld ${_m}; then
			return 1
		fi
	done

	if ! sysctl vfs.usermount=1 > /dev/null 2>&1; then
		err 1 "cannot set vfs.usermount to 1"
	fi

	return 0
}

kbfsd_start()
{
	# The Keybase client has to be initiated
	# so that "/home/${kbfsd_username}/.config/keybase/keybased.sock"
	# is present.
	su "${kbfsd_username}" -c "keybase fs ls /keybase > /dev/null 2>&1"

	# It has to be done manually because the su(1) mechanism present
	# in rc.subr(8) uses the "-m" flag, which causes kbfsfuse to look
	# for files in root's directories instead of the directories of
	# ${kbfsd_username}.
	su "${kbfsd_username}" -c "${command} ${command_args}"
}

run_rc_command "$1"
# vim: filetype=sh softtabstop=8 shiftwidth=8 tabstop=8 noexpandtab
